{"quiz":
    [{"name": "Variables",
     "forTutorial": "Hello World",
     "introText": "For this first tutorial we will make a small program that all programmers knows very well, and that is to say \"Hello World!\"",
     "iconName": "quiz1main.png",
     "endQuizText": "Congratulations!\r\r You've just made your first app!\r\rLet's try some more :-)",
     "quizquestions":
     [{"question": "There are two types of variables in Swift.\r\r Immutables are declared with \"let\" and cannot change once they have been given a value.\r\r Mutable are declared with \"var\" can be changed at any time. \r\r If you want to make a constant variable called \"welcomeMessage\" how would you declare it?",
      "option1": "var \"welcomeMessage\": String",
      "option2": "let welcomeMessage: String",
      "option3": "var welcomeMessage: Int",
      "option4": "let welcomeMessage: String",
      "correctOption": 4,
      "correctAnswerText": "\r\r You use the keyword \"let\" to make a variable that cannot change.\r\r The \": String\" indicates that this variable will contain a text string."},
      {"question": "You want to create a constant variable called name that will have the value of \"Carlos\" assigned to it.\r\r How do you declare this variable?",
      "option1": "var name = \"Carlos\"",
      "option2": "let name: String = \"Carlos\"",
      "option3": "var name = Carlos",
      "option4": "let name: String = Carlos",
      "correctOption": 2,
      "correctAnswerText": "\r\r You have assigned a constant to the Variable with let name = \"Carlos\"\r\r If you give the variable a value when you are creating it, you don't have to declare the Type also. The computer will figure this out automatically.\r\r So both of the lines of code below are valid:\r\r\r\r  let name = \"Carlos\"\r\r  let name: String = \"Carlos\""},
      {"question": "You assign types to objects you make in code. These types tells the computer what sort of information the object contains.\r\r Which of the below is a valid type if you want the object to contain text?",
      "option1": "var name: Carlos",
      "option2": "var month: Int",
      "option3": "var message: String",
      "option4": "var textDescription: Double",
      "correctOption": 3,
      "correctAnswerText": "\r\r For declaring text we set the type as a (text) String.\r\r Int (integer) is used for numbers 1, 2, 5, 1928 etc. Double is used for numbers with one decimal place.\r\r Carlos is probably someones type as well, but not in coding"},
      {"question": "Which of the declarations below are valid if you want to create a variable the will hold a number of 10.2?",
      "option1": "var number: Float = 10.2",
      "option2": "let number: Int = 10.2",
      "option3": "var number: Double = 10.2",
      "option4": "let number: String = \"10.2\"",
      "correctOption": 3,
      "correctAnswerText": " \r\r For numbers with one decimal place we use Double as a Type.\r\r Float number also have decimals and are similar to Double, but with less accuracy. Float numbers are usually used if you have tens of thousands of numbers, due to performance issues."},
      {"question": "Look at the code below. There are two name variables created and then one is printed.\r\r What will be printed out in the end?\r\r\r let name = \"Jeroen\" \r\r var newName = \"Karl\" \r\r name = newName\r\r newName = name\r\r print(name)",
      "option1": "\"Karl\"",
      "option2": "Jeroen",
      "option3": "Karl",
      "option4": "None of the above",
      "correctOption": 2,
      "correctAnswerText": " \r\r Since the variable \"name\" was declared a constant with the keyword \"let\" it couldn't be changed after it had gotten its value."},
      {"question": "Boolean is another type in Swift that you can asign to an object. This value can be either true or false.\r\r If you want to create a variable with the name \"readyToPrint\" and give it a value of false, how would you write that in code?",
      "option1": "var boolean = \"readyToPrint\"",
      "option2": "var readyToPrint: Bool = true",
      "option3": "var readyToPrint: Bool = false",
      "option4": "var readyToPrint: Bool = \"false\"",
      "correctOption": 3,
      "correctAnswerText": " \r\r Boolean variables are goof to use when you only want to do something is something else is true or false. For example:\r\r \"Only print the page if there is enough toner in the printer\""},
      {"question": "We want to print a text string for our project. Will the code below allow us to print the string?\r\r var message = \"Hello World!\"\r\rif message != nil {\r  readyToPrint == true\r}\r\r if readyToPrint == true then printer.print(message)",
      "option1": "Yes, it will print out \"Hello World!\"",
      "option2": "No",
      "option3": "Only if the printer is on",
      "option4": "Yes, it will print out \"message\"",
      "correctOption": 1,
      "correctAnswerText": " \r\r The printer (if it is on) will print out the message"},
      {"question": "Which of the lines of code below are declared wrong?\r\r let myHomeTown = \"Oslo\"\r\r var number: Int = 2.0\r\r var bestSuperHero: String = \"Batman\" \r\r let temperature = 14.5",
      "option1": "let myHomeTown = \"Oslo\"",
      "option2": "var number: Int = 2.0",
      "option3": "var bestSuperHero: String = \"Batman\"",
      "option4": "let temperature = 14.5",
      "correctOption": 2,
      "correctAnswerText": " \r\r The value that was assigned to the variable \"number\" is a Double/Float and not an Int (Integer)"},
      {"question": "What does the code below print out?\r\r var i = 1.0\r\r var k = 5\r\r var i = i + k\r\r print(i)",
      "option1": "1.0",
      "option2": "6",
      "option3": "6.0",
      "option4": "It returns an error",
      "correctOption": 4,
      "correctAnswerText": " \r\r It is not possible to do addition, multiplication or division with different type of number variables. In our case \"i\" is an Int and \"k\" is a Double.\r\r To be able to do this we can convert the Int to a Double Wer do that like this: \r\r var i = i + Int(k)"},
      {"question": "Which of the types below are not standard types used in Swift coding?",
      "option1": "String",
      "option2": "NSURL",
      "option3": "UIColor",
      "option4": "All of them are valid types",
      "correctOption": 4,
      "correctAnswerText": " \r\r Yes, all of them are valid types for variables when coding in Swift.\r\r  String - hold a text string \r\r  NSURL - holds an URL link, which can either be to a location on your iphone, computer or web \r\r  UIColor - used when you want a specific color to have a variable, for example: \r\r   var favoriteColor: UIColor = UIColor.blueColor()"}]
     },
      {"name": "Functions",
      "forTutorial": "Hello World",
      "introText": "For this first tutorial we will make a small program that all programmers knows very well, and that is to say \"Hello World!\"",
      "iconName": "quiz2main.png",
      "endQuizText": "Congratulations!\r\rYou completed the quiz about Variables!",
      "quizquestions":
      [{"question": "How do you declare a variable that holds text?",
       "option1": "var text: Text",
       "option2": "var String",
       "option3": "var text: String",
       "option4": "text: String",
       "correctOption": 3,
       "correctAnswerText": " \r\r You declare a text string with var text: String"},
       {"question": "Blablabla?",
       "option1": "Marco",
       "option2": "Samuel",
       "option3": "Miranda",
       "option4": "Roma",
       "correctOption": 3,
       "correctAnswerText": " \r\r Willy"},
       {"question": "Blablabla?",
       "option1": "Marco",
       "option2": "Samuel",
       "option3": "Miranda",
       "option4": "Roma",
       "correctOption": 3,
       "correctAnswerText": " \r\r Willy"}]
      }
      ]
     }